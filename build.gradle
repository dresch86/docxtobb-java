plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // JavaFX
    id "org.openjfx.javafxplugin" version "0.0.9"

    // For non-modularized packaging
    id 'org.beryx.runtime' version '1.11.2'

    // For FAT jat
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14

repositories {
    jcenter()
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-iostreams
    implementation group: 'org.apache.logging.log4j', name: 'log4j-iostreams', version: '2.13.3'

    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.14'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

    // https://mvnrepository.com/artifact/org.zwobble.mammoth/mammoth/1.4.1
    implementation group: 'org.zwobble.mammoth', name: 'mammoth', version: '1.4.1'

    // https://mvnrepository.com/artifact/com.github.djeang/vincer-dom
    implementation group: 'com.github.djeang', name: 'vincer-dom', version: '1.0.0'

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'

    // https://mvnrepository.com/artifact/org.javatuples/javatuples
    implementation group: 'org.javatuples', name: 'javatuples', version: '1.2'

    // For converting legacy WMF images to SVG
    implementation project('third-party:wmf2svg')

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

tasks.jar {
    dependsOn ':third-party:wmf2svg:build'
}

javafx {
    version = '14'
    modules = ['javafx.controls', 'javafx.graphics', 'javafx.fxml']
}

application {
    mainClassName = 'org.ose.docxtobb.Launcher'
    applicationName = 'DocxToBB'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.ose.docxtobb.Launcher'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        noConsole = true
    }

    jpackage {
        def currentOS = org.gradle.internal.os.OperatingSystem.current()
        imageName = 'DocxToBB'

        installerOptions += [
            '--description', 'DocxToBB converts specially formatted Word documents to Blackboard Learn test packages',
            '--copyright', 'Copyright 2020 Daniel J. Resch, Ph.D.'
        ]

        if (currentOS.isWindows()) {
            installerName = 'DocxToBB_win_x64'
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            imageOptions = ['--icon', 'src/main/resources/mainIcon.ico']
        } else if (currentOS.isLinux()) {
            installerName = 'DocxToBB_linux_x64'
            installerOptions += ['--linux-shortcut', '--linux-app-category', 'Office', '--linux-menu-group', 'Application']
            imageOptions = ['--icon', 'src/main/resources/mainIcon.svg']
        } else if (currentOS.isMacOsX()) {
            installerName = 'DocxToBB_macos_x64'
            imageOptions = ['--icon', 'src/main/resources/mainIcon.icns']
        } else {
            println "Unsupported OS"
            System.exit(1)
        }
    }
}